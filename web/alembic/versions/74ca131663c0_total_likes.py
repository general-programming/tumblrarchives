"""total likes

Revision ID: 74ca131663c0
Revises: 6d98e870f098
Create Date: 2018-12-07 09:46:52.500626

"""

# revision identifiers, used by Alembic.
revision = '74ca131663c0'
down_revision = '6d98e870f098'
branch_labels = None
depends_on = None

import sys

from alembic import op
import sqlalchemy as sa

from archives.lib.model import Blog, sm


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('blogs', sa.Column('total_likes', sa.Integer(), server_default='0', nullable=False))
    # ### end Alembic commands ###

    # Force commit the operation
    conn = op.get_bind()
    conn.execute("COMMIT")

    updates = []
    added = 0
    db = sm()
    commit_db = sm()

    for blog in db.query(Blog).filter(sa.or_(
        Blog.data.has_key("likes"),
        Blog.data.has_key("share_likes")
    )).yield_per(512):
        try:
            new_data = blog.data.copy()
            new_data.pop("share_likes", None)

            total_likes = max(
                new_data.pop("likes", 0),
                blog.total_likes
            )

            updates.append({
                "id": blog.id,
                "total_likes": total_likes,
                "data": new_data
            })
        except KeyError:
            continue
        
        # Commit every 512 blogs.
        added += 1
        if len(updates) == 512:
            commit_db.execute("SET synchronous_commit TO off")
            print(f"{added} blogs processed.", flush=True)
            commit_db.bulk_update_mappings(Blog, updates)
            commit_db.commit()
            updates.clear()

    if updates:
        commit_db.bulk_update_mappings(Blog, updates)
        commit_db.commit()


def downgrade():
    # No.
    pass
