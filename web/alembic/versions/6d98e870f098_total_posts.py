"""total posts

Revision ID: 6d98e870f098
Revises: a15171647482
Create Date: 2018-12-07 07:51:53.111546

"""

# revision identifiers, used by Alembic.
revision = '6d98e870f098'
down_revision = 'a15171647482'
branch_labels = None
depends_on = None

import sys

from alembic import op
import sqlalchemy as sa

from archives.lib.model import Blog, sm


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('blogs', sa.Column('total_posts', sa.Integer(), server_default='0', nullable=False))
    # ### end Alembic commands ###

    # Force commit the operation
    conn = op.get_bind()
    conn.execute("COMMIT")

    updates = []
    added = 0
    db = sm()
    commit_db = sm()

    for blog in db.query(Blog).filter(sa.or_(
        Blog.data.has_key("total_posts"),
        Blog.data.has_key("posts")
    )).yield_per(256):
        try:
            new_data = blog.data.copy()
            total_posts = max(
                max(new_data.pop("total_posts", 0), new_data.pop("posts", 0)),
                blog.total_posts
            )

            updates.append({
                "id": blog.id,
                "total_posts": total_posts,
                "data": new_data
            })
        except KeyError:
            continue
        
        # Commit every 512 blogs.
        added += 1
        if len(updates) == 512:
            commit_db.execute("SET synchronous_commit TO off")
            print(f"{added} blogs processed.", flush=True)
            commit_db.bulk_update_mappings(Blog, updates)
            commit_db.commit()
            updates.clear()

    if updates:
        commit_db.bulk_update_mappings(Blog, updates)
        commit_db.commit()

def downgrade():
    # Pass. Going back = lost data.
    pass
