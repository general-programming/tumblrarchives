"""post type and tags and other fields

Revision ID: e26f3256dd74
Revises: e02a901ef0dc
Create Date: 2018-12-08 10:26:23.130378

"""

# revision identifiers, used by Alembic.
revision = 'e26f3256dd74'
down_revision = 'e02a901ef0dc'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from archives.lib.model import Post, sm

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('posts', sa.Column('post_type', sa.String(), nullable=True))
    op.add_column('posts', sa.Column('tags', postgresql.ARRAY(sa.Unicode()), nullable=True))
    # ### end Alembic commands ###

    # Force commit the operation
    conn = op.get_bind()
    conn.execute("COMMIT")

    updates = []
    added = 0
    db = sm()
    commit_db = sm()

    for post in db.query(Post).filter(sa.or_(
        Post.data.has_key("liked"),
        Post.data.has_key("followed"),
        Post.data.has_key("tags"),
        Post.data.has_key("type")
    )).yield_per(512):
        new_data = post.data.copy()

        update = {
            "id": post.id,
            "data": new_data
        }

        update["post_type"] = new_data.pop("type", post.post_type)
        update["tags"] = new_data.pop("tags", post.tags) or []
        new_data.pop("liked", None)
        new_data.pop("followed", None)

        updates.append(update)

        # Commit every 1024 posts.
        added += 1
        if len(updates) == 1024:
            commit_db.execute("SET synchronous_commit TO off")
            print(f"{added} posts processed.", flush=True)
            commit_db.bulk_update_mappings(Post, updates)
            commit_db.commit()
            updates.clear()

    if updates:
        commit_db.bulk_update_mappings(Post, updates)
        commit_db.commit()

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('posts', 'tags')
    op.drop_column('posts', 'post_type')
    # ### end Alembic commands ###
